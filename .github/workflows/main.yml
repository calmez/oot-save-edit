name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write # for creating a release tag

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - name: Install
        run: deno install --lock
      - name: Linting
        run: deno lint
      - name: Formatting
        run: deno fmt --check
      - name: Run tests
        run: deno test
      - name: Build
        run: deno task build:all
      - name: Version
        id: version
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          vcs_release: true
          commit: false
      - name: Get Release by Tag
        id: get_release_by_tag
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.repos.getReleaseByTag(
              context.repo.owner,
              context.repo.repo,
              ${{ steps.version.outputs.tag }}
            );
            return release.data.upload_url;
          result-encoding: string
      - name: Upload release asset GUI MacOS ARM
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_by_tag.outputs.result.upload_url }}
          asset_path: ./build/aarch64-apple-darwin/gui
          asset_name: macos-apple-silicon-gui
          asset_content_type: application/x-mach-binary
      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          folder: docs
          clean: true
          single-commit: true
          git-config-name: calmez-ghbot
          git-config-email: ghbot-noreply@calmez.net
